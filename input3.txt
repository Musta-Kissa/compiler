struct Kot {
    kolor: *float;
}

struct Test {
    ala: int = 3;
    bartek: float;
    szkodnik: [1]Kot;
}

globalint:int= 3+10*7;


fn bar([][]float bbb) -> int {
    return 3;
}

fn fazz([]Kot koty) {
    return;
}

fn foo(float a,int b,int c) -> *float {
    z:*float = &a;
    v: [10][1]float;
    f: = bar(v);
    g:= a;
    test_var: Test;
    fazz(test_var.szkodnik);

    i: int;
    h: int = 420;
    for(i = 1; i < b; ++i) {
        i + b;
    }
    while ( a+a > a ) {
        x: int;
        x > c;
        return &a;
    }
    if( g > g ) {
        c: int;
        if( b > c) {
        }
    }
    i + b;
    if ( b > b ) {
        return &a;
    }
    {
        a: int;
        b: int;
    }
}
fn void_func() {
    void_func();
}

EOF
&(!(a == a));
a = &v[b][b];
